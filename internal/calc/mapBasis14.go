package calc

import "strconv"

func (b *Basis14) mapGroup() map[string]map[string][]string {

	res := map[string]map[string][]string{
		"f1": {},
		"f2": {
			"I": {
				"1", "2", "3", "4",
				"5", "6", "7", "8",
			},
			"F": {"1", "2"},
			"DI": {
				"1", "2", "3", "4",
				"5", "6", "7", "8",
			},
			"EXT": {
				"1", "2", "3", "4",
				"5", "6", "7", "8",
				"9", "10", "11", "12",
			},
			"B": {
				"1", "2", "3", "4",
				"5", "6", "7", "8",
			},
			"P": {
				"1", "2", "3", "4",
				"5", "6", "7", "8",
				"9", "10", "11", "12",
				"13", "14", "15", "16",
			},
			"W": {},
		},
		"f3": {
			"CLM": {
				"ctrlMod", "ctrlConfig", "coefGroup",
				"specAlgNum", "setpoint", "valveValue",
				"Ko", "Kp", "Ti", "Td", "Tf",
				"specq", "specD",
			},
			"CLEXT": {
				"ctrlConfig", "coefGroup",
				"specAlgNum", "setpoint", "valveValue",
				"Ko", "Kp", "Ti", "Td", "Tf",
			},
			"TIME": {
				"YEAR", "MONTH",
				"DAY", "HOUR",
				"MIN", "SEC",
			},
			"P": {
				"1", "2", "3", "4",
				"5", "6", "7", "8",
				"9", "10", "11", "12",
				"13", "14", "15", "16",
			},
			"HI": {
				"1", "2", "3", "4",
				"5", "6", "7", "8",
			},
			"HEXT": {
				"1", "2", "3", "4",
				"5", "6", "7", "8",
			},
			"HP": {
				"1", "2", "3", "4",
				"5", "6", "7", "8",
				"9", "10", "11", "12",
				"13", "14", "15", "16",
			},
			"HB": {
				"1", "2", "3", "4",
				"5", "6", "7", "8",
			},
		},
		"f4": {
			"I": {
				"1", "2", "3", "4",
				"5", "6", "7", "8",
			},
			"EXT": {
				"1", "2", "3", "4",
				"5", "6", "7", "8",
			},
			"P": {
				"1", "2", "3", "4",
				"5", "6", "7", "8",
				"9", "10", "11", "12",
				"13", "14", "15", "16",
			},
			"B": {
				"1", "2", "3", "4",
				"5", "6", "7", "8",
			},
		},
		"f5":  {},
		"f6":  {},
		"f16": {},
	}

	// 64 канала W
	for i := 1; i <= 64; i++ {
		temp := res["f2"]
		temp["W"] = append(temp["W"], strconv.Itoa(i))
	}

	return res

}
